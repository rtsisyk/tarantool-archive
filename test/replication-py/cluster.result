ok - cluster uuid
-------------------------------------------------------------
 gh-696: Check global READ permissions for replication
-------------------------------------------------------------
ok - join without read permissions on universe
ok - subscribe without read permissions on universe
box.schema.user.grant('guest', 'read', 'universe')
---
...
ok - join without write permissions to _cluster
box.schema.user.grant('guest', 'write', 'space', '_cluster')
---
...
ok - join with granted permissions
box.schema.user.revoke('guest', 'read', 'universe')
---
...
box.schema.user.revoke('guest', 'write', 'space', '_cluster')
---
...
box.schema.user.grant('guest', 'replication')
---
...
ok - join with granted role
-------------------------------------------------------------
gh-707: Master crashes on JOIN if it does not have snapshot files
gh-480: If socket is closed while JOIN, replica wont reconnect
-------------------------------------------------------------
ok - join without snapshots
ok - _cluster did not change after unsuccessful JOIN
box.schema.user.revoke('guest', 'replication')
---
...
box.snapshot()
---
- ok
...
-------------------------------------------------------------
gh-434: Assertion if replace _cluster tuple for local server
-------------------------------------------------------------
box.space._cluster:replace{1, require('uuid').NULL:str()}
---
- error: The local instance id 1 is read-only
...
box.space._cluster:replace{1, require('uuid').str()}
---
- error: The local instance id 1 is read-only
...
box.space._cluster:update(1, {{'=', 3, 'test'}})
---
- error: The local instance id 1 is read-only
...
-------------------------------------------------------------
gh-1140: Assertion if replace _cluster tuple for remote server
-------------------------------------------------------------
box.space._cluster:insert{5, '0d5bd431-7f3e-4695-a5c2-82de0a9cbc95'}
---
- [5, '0d5bd431-7f3e-4695-a5c2-82de0a9cbc95']
...
box.info.vclock[5] == nil
---
- true
...
box.space._cluster:replace{5, '0d5bd431-7f3e-4695-a5c2-82de0a9cbc95'}
---
- [5, '0d5bd431-7f3e-4695-a5c2-82de0a9cbc95']
...
box.space._cluster:replace{5, 'a48a19a3-26c0-4f8c-a5b5-77377bab389b'}
---
- error: Space _cluster does not support updates of instance uuid
...
box.space._cluster:update(5, {{'=', 3, 'test'}})
---
- [5, '0d5bd431-7f3e-4695-a5c2-82de0a9cbc95', 'test']
...
box.space._cluster:delete(5)
---
- [5, '0d5bd431-7f3e-4695-a5c2-82de0a9cbc95', 'test']
...
box.info.vclock[5] == nil
---
- true
...
-------------------------------------------------------------
Start a new replica and check box.info on the start
-------------------------------------------------------------
box.schema.user.grant('guest', 'replication')
---
...
box.info.id == 2
---
- true
...
not box.info.ro
---
- true
...
box.info.lsn == 0
---
- true
...
box.info.vclock[2] == nil
---
- true
...
-------------------------------------------------------------
Modify data to bump LSN and check box.info
-------------------------------------------------------------
box.space._schema:insert{"test", 48}
---
- ['test', 48]
...
box.info.lsn == 1
---
- true
...
box.info.vclock[2] == 1
---
- true
...
-------------------------------------------------------------
Connect master to replica
-------------------------------------------------------------
box.cfg{ replication_source = '<replication_source>' }
---
...
-------------------------------------------------------------
Disconnect replica from master
-------------------------------------------------------------
box.cfg { replication_source = "" }
---
...
-------------------------------------------------------------
Unregister replica
-------------------------------------------------------------
box.space._cluster:delete{2} ~= nil
---
- true
...
box.info.vclock[2] == 1
---
- true
...
-------------------------------------------------------------
Modify data to bump LSN on replica
-------------------------------------------------------------
box.space._schema:insert{"tost", 49}
---
- ['tost', 49]
...
box.info.lsn == 2
---
- true
...
box.info.vclock[2] == 2
---
- true
...
-------------------------------------------------------------
Master must not crash then receives orphan rows from replica
-------------------------------------------------------------
box.cfg{ replication = '<replication_source>' }
---
...
box.info.vclock[2] == 2
---
- true
...
box.cfg{ replication = '' }
---
...
-------------------------------------------------------------
Start a new replica and check that server_id, LSN is re-used
-------------------------------------------------------------
box.snapshot()
---
- ok
...
box.info.vclock[2] == 2
---
- true
...
box.info.id == 2
---
- true
...
not box.info.ro
---
- true
...
box.info.vclock[2] == 2
---
- true
...
box.info.vclock[2] == 2
---
- true
...
-------------------------------------------------------------
JOIN replica to read-only master
-------------------------------------------------------------
box.cfg { read_only = true }
---
...
'ER_READONLY' exists in server log
box.cfg { read_only = false }
---
...
-------------------------------------------------------------
Cleanup
-------------------------------------------------------------
box.schema.user.revoke('guest', 'replication')
---
...
